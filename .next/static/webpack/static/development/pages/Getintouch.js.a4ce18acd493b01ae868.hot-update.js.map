{"version":3,"file":"static/webpack/static/development/pages/Getintouch.js.a4ce18acd493b01ae868.hot-update.js","sources":["webpack:///./src/hocs/AppHOC.js"],"sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport SideBar from '../containers/SideBar';\nimport { fetchAll } from '../utils/fetch';\n\nimport '../styles/App.scss';\n\nimport Modal from '../components/Modal';\n\nconst INITIAL_MODAL_DATA = {\n  isOpen: false,\n  message: '',\n  confirmText: 'Confirm',\n  rejectText: 'Cancel',\n  callback: null,\n  type: 'primary'\n};\n\nconst AppHOC = (WrappedComponent, componentType) =>\n  class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        portfolioData: [],\n        blogData: [],\n        modalData: INITIAL_MODAL_DATA\n      };\n      this._setHtml = this._setHtml.bind(this);\n      this._loadModalData = this._loadModalData.bind(this);\n    }\n\n    componentDidMount() {\n      Promise.all([fetchAll('portfolio'), fetchAll('post')]).then(\n        responseArray => {\n          this.setState({\n            portfolioData: responseArray[0].sort((a, b) => a.order < b.order),\n            blogData: responseArray[1]\n          });\n        }\n      );\n    }\n\n    _loadModalData({ callback, cancelCallback, ...otherProps }) {\n      this.setState({\n        modalData: {\n          ...INITIAL_MODAL_DATA,\n          isOpen: true,\n          resolver: () =>\n            Promise.resolve(callback()).then(res => {\n              this.setState(prevState => ({\n                modalData: INITIAL_MODAL_DATA,\n                portfolioData: res.portfolio\n                  ? prevState.portfolioData.filter(el => el._id !== res._id)\n                  : prevState.portfolioData,\n                blogData: res.blog\n                  ? prevState.blogData.filter(el => el._id !== res._id)\n                  : prevState.blogData\n              }));\n            }),\n          rejecter: () => {\n            if (cancelCallback) {\n              cancelCallback();\n            }\n            this.setState({\n              modalData: INITIAL_MODAL_DATA\n            });\n          },\n          ...otherProps\n        }\n      });\n    }\n\n    _setHtml(type, htmlsData, editMode = false) {\n      const htmlType = type === 'portfolio' ? 'portfolioData' : 'blogData';\n      if (editMode) {\n        const indexToReplace = this.state[htmlType].findIndex(\n          el => el._id === htmlsData._id\n        );\n        this.setState(prevState => ({\n          [htmlType]: [\n            ...prevState[htmlType].slice(0, indexToReplace),\n            htmlsData,\n            ...prevState[htmlType].slice(indexToReplace + 1)\n          ].sort((a, b) => a.order < b.order)\n        }));\n      } else {\n        this.setState(prevState => ({\n          [htmlType]: prevState[htmlType]\n            .concat(htmlsData)\n            .sort((a, b) => a.order < b.order)\n        }));\n      }\n    }\n\n    _injectComponentProps(type) {\n      let dataProps = {\n        setHtml: this._setHtml,\n        loadModalData: this._loadModalData\n      };\n      switch (type) {\n        case 'home':\n          dataProps.appData = this.state.portfolioData;\n          break;\n        case 'blog':\n          dataProps.appData = this.state.blogData;\n          break;\n        default:\n          dataProps = {};\n      }\n      console.log('data props', dataProps)\n      return (\n        <WrappedComponent {...dataProps} className=\"App-content-container\" />\n      );\n    }\n\n    render() {\n      return (\n        <React.Fragment>\n          <Head>\n            <link\n              rel=\"stylesheet\"\n              href=\"https://use.fontawesome.com/releases/v5.4.1/css/all.css\"\n              integrity=\"sha384-5sAR7xN1Nv6T6+dT2mhtzEpVJvfS3NScPQTrOxhwjIuvcA67KV2R5Jz6kr4abQsz\"\n              crossOrigin=\"anonymous\"\n            />\n          </Head>\n          <div className=\"App\">\n            <Modal modalData={this.state.modalData} />\n            <SideBar className=\"App-sidebar-container\" />\n            {this._injectComponentProps(componentType)}\n          </div>\n        </React.Fragment>\n      );\n    }\n  };\n\nexport default AppHOC;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AARA;AASA;AACA;AAZA;AAAA;AAAA;AAaA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAEA;AAtBA;AAAA;AAAA;AAwBA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AANA;AAAA;AASA;AAXA;AAYA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAtBA;AADA;AA2BA;AApDA;AAAA;AAAA;AAsDA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAKA;AAAA;AALA;AAOA;AACA;AAAA;AAGA;AAAA;AAHA;AAKA;AACA;AA1EA;AAAA;AAAA;AA6EA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AARA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AA/FA;AAAA;AAAA;AAkGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAnHA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqHA;;;;A","sourceRoot":""}